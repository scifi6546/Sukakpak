{"fragment_shader":"#version 300 es\n\nprecision highp float;\nprecision highp int;\n\nstruct VertexOutput {\n    vec2 tex_coord;\n    vec4 position;\n};\n\nuniform highp sampler2D _group_0_binding_0;\n\nsmooth in vec2 _vs2fs_location0;\nlayout(location = 0) out vec4 _fs2p_location0;\n\nvoid main() {\n    VertexOutput in1 = VertexOutput(_vs2fs_location0, gl_FragCoord);\n    vec4 texture = texture(_group_0_binding_0, vec2(in1.tex_coord));\n    _fs2p_location0 = (texture + vec4(0.0, 0.0, 0.0, 1.0));\n    return;\n}\n\n","vertex_shader":"#version 300 es\n\nprecision highp float;\nprecision highp int;\n\nstruct VertexOutput {\n    vec2 tex_coord;\n    vec4 position;\n};\n\nuniform Locals_block_0Vs {\n    mat4x4 transform;\n} _group_0_binding_3;\n\nlayout(location = 0) in vec3 _p2vs_location0;\nlayout(location = 1) in vec2 _p2vs_location1;\nlayout(location = 2) in vec3 _p2vs_location2;\nsmooth out vec2 _vs2fs_location0;\n\nvoid main() {\n    vec3 position = _p2vs_location0;\n    vec2 tex_coord = _p2vs_location1;\n    vec3 normal = _p2vs_location2;\n    VertexOutput out1;\n    out1.tex_coord = tex_coord;\n    mat4x4 _e8 = _group_0_binding_3.transform;\n    out1.position = (_e8 * vec4(position, 1.0));\n    VertexOutput _e12 = out1;\n    _vs2fs_location0 = _e12.tex_coord;\n    gl_Position = _e12.position;\n    gl_Position.yz = vec2(-gl_Position.y, gl_Position.z * 2.0 - gl_Position.w);\n    return;\n}\n\n","texture_name":"_group_0_binding_0","uniform_name":"Locals_block_0Vs","vertex_input":{"binding":0,"fields":[{"ty":{"Vec3":"F32"},"location":0,"name":"position"},{"ty":{"Vec2":"F32"},"location":1,"name":"tex_coord"},{"ty":{"Vec3":"F32"},"location":2,"name":"normal"}]}}